name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio httpx
        
    - name: Install package in development mode
      run: |
        python setup.py develop
      
    - name: List installed packages
      run: pip list
        
    - name: Show directory structure and Python path
      run: |
        echo "Current directory:"
        pwd
        echo "\nDirectory structure:"
        ls -R
        echo "\nPYTHONPATH:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "\nPython executable:"
        which python
        
    - name: Run tests with coverage
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python -m pytest src/tests/ -v --cov=src/ --cov-report=term-missing
        
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" 